openapi: 3.0.1
info:
  title: Passwordless Login Service
  version: 0.0.1
tags:
  - name: Auth
  - name: Login
paths:
  /login/generate:
    summary: Making a call to this resource you'll generate login request, that can be fulfilled by reaching email
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateTokenRequest"
        required: true
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Set-Cookie:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
  /login/perform:
    summary: This endpoint is used to login/register user
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Set-Cookie:
              schema:
                type: string
                example: sessionId=<token>; Secure; Path=/; HttpOnly; Max-Age=0
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"

  /logout:
    summary: This endpoint is used to login user
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Empty"
        required: true
      security:
        - cookieWithToken: [ ]
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Set-Cookie:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
        "401":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"

  /echo/{proxy+}:
    summary: protected resources of your app
    get:
      parameters:
        - name: proxy+
          in: path
          description: Generated path parameter for proxy+
          required: true
          schema:
            type: string
      security:
        - cookieWithToken: []
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Set-Cookie:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
components:
  securitySchemes:
    cookieWithToken:
      type: apiKey
      in: cookie
      name: sessionId

  schemas:
    Empty:
      title: Empty Schema
      type: object
    User:
      title: User
      type: object
      properties:
        email:
          type: string
        name:
          type: string
    UserProfile:
      title: User Profile
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        surName:
          type: string
    Error:
      title: Error Schema
      type: object
      properties:
        message:
          type: string
    LoginRequest:
      title: Login Request
      type: object
      properties:
        token:
          type: string
        email:
          type: string
    LoginResponse:
      title: Login token use to protect against CSRF
      type: object
      properties:
        token:
          type: string
    GenerateTokenRequest:
      title: Generate Token Request
      type: object
      properties:
        email:
          type: string