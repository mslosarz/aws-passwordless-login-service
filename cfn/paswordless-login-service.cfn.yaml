AWSTemplateFormatVersion: 2010-09-09
Description: Stack for passwordless login service that allows you to create an account (or login) to service using only your email address

Parameters:
  SolutionName:
    Type: String
  S3Bucket:
    Type: String
  DomainName:
    Type: String
  Version:
    Type: String
  DomainStack:
    Type: String
  ApiAuthorizerLambda:
    Type: String
  ApiLoginLambda:
    Type: String
  ApiEchoLambda:
    Type: String

Resources:
  # Api
  ApiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/${Version}/cfn/solution/apigw.cfn.yaml
      Parameters:
        DomainName: !Ref DomainName
        SolutionName: !Ref SolutionName
        DomainCertificateArn: !Sub '{{resolve:ssm:/${DomainStack}/Domain/DomainCertificateArn}}'
        DomainHostedZoneId: !Sub '{{resolve:ssm:/${DomainStack}/Domain/HostedZoneId}}'

  # SES - Mail
  EMailStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/${Version}/cfn/solution/email.cfn.yaml
      Parameters:
        SolutionName: !Ref SolutionName
        DomainName: !Ref DomainName
        DomainHostedZoneId: !Sub '{{resolve:ssm:/${DomainStack}/Domain/HostedZoneId}}'

  # Persistence
  PersistenceStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/${Version}/cfn/solution/persistence.cfn.yaml
      Parameters:
        SolutionName: !Ref SolutionName

  # Lambdas
  AuthorizerLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/${Version}/cfn/solution/authorizer-lambda.cfn.yaml
      Parameters:
        SolutionName: !Ref SolutionName
        ArtifactName: !Ref ApiAuthorizerLambda
        S3Bucket: !Ref S3Bucket
        Version: !Ref Version
        ApiId: !GetAtt ApiStack.Outputs.ApiGwId
        LambdaName: 'auth'

        DomainName: !Ref DomainName

        LoginRequestsTableArn: !GetAtt PersistenceStack.Outputs.LoginRequestsTableArn
        UsersTableArn: !GetAtt PersistenceStack.Outputs.UsersTableArn

  LoginRouteLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/${Version}/cfn/solution/login-route-lambda.cfn.yaml
      Parameters:
        SolutionName: !Ref SolutionName
        ArtifactName: !Ref ApiLoginLambda
        S3Bucket: !Ref S3Bucket
        Version: !Ref Version
        ApiId: !GetAtt ApiStack.Outputs.ApiGwId
        LambdaName: 'route-login'

        DomainName: !Ref DomainName

        LoginRequestsTableArn: !GetAtt PersistenceStack.Outputs.LoginRequestsTableArn
        LoginRequestsTableName: !GetAtt PersistenceStack.Outputs.LoginRequestsTable
        UsersTableArn: !GetAtt PersistenceStack.Outputs.UsersTableArn
        UsersTableName: !GetAtt PersistenceStack.Outputs.UsersTable

        EMailTemplate: !GetAtt EMailStack.Outputs.EMailTemplate
        EMailTemplateName: !GetAtt EMailStack.Outputs.EMailTemplateName
        EMailConfigurationSet: !GetAtt EMailStack.Outputs.EMailConfigurationSet

  EchoRouteLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/${Version}/cfn/solution/echo-route-lambda.cfn.yaml
      Parameters:
        SolutionName: !Ref SolutionName
        ArtifactName: !Ref ApiEchoLambda
        S3Bucket: !Ref S3Bucket
        Version: !Ref Version
        ApiId: !GetAtt ApiStack.Outputs.ApiGwId
        LambdaName: 'route-echo'
        LambdaAuthorizer: !GetAtt AuthorizerLambdaStack.Outputs.LambdaAuthorizer


  KeysStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/${Version}/cfn/solution/keys.cfn.yaml
      Parameters:
        SolutionName: !Ref SolutionName

Outputs:
  ApiGwFacade:
    Description: Api Gw execution url
    Value: !Sub 'https://${ApiStack.Outputs.ApiGwId}.execute-api.${AWS::Region}.amazonaws.com'
    Export:
      Name: !Sub '${SolutionName}-facade-endpoint'
  ApiEndpoint:
    Description: Custom API GW domain
    Value: !Sub 'https://${ApiStack.Outputs.CustomExecutionDomainName}'